name: Build Front

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Check Node v
        run: node -v

      - name: Build front
        run: |
          npm install
          npm run build

      - name: Get image tag(verion)
        id: image
        run: |
          VERSION=\$(echo \${{ github.sha }} | cut -c1-8)
          echo VERSION=\$VERSION
          echo "::set-output name=version::\$VERSION"

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build, tag, and push image to Docker Hub
        id: image-info
        env:
          DOCKER_HUB_REPO: readytodev/5team-front
          IMAGE_TAG: \${{ steps.image.outputs.version }}
        run: |
          echo "::set-output name=docker_hub_repo::$DOCKER_HUB_REPO"
          echo "::set-output name=image_tag::$IMAGE_TAG"
          docker build -t $DOCKER_HUB_REPO:$IMAGE_TAG .
          docker push $DOCKER_HUB_REPO:$IMAGE_TAG

      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v1

      - name: Checkout kustomize repository
        uses: actions/checkout@v2
        with:
          repository: /k8s-manifest-repo
          ref: main
          token: ${{ secrets.ACTION_TOKEN }}
          path: k8s-manifest-repo

      - name: Update Kubernetes resources
        run: |
          cd k8s-manifest-repo/overlays/dev/
          kustomize edit set image readytodev/5team-front=readytodev/5team-front:\${{ steps.image-info.outputs.image_tag }}
          cat kustomization.yaml

      - name: Commit files
        run: |
          cd k8s-manifest-repo
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"
          git commit -am "Update image tag"
          git push -u origin main

